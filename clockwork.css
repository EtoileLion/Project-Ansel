@import url('https://fonts.googleapis.com/css?family=Italiana|Rye|Cookie&display=swap');

.box {
	width: 100%;
	background-color: rgb(238,227,210);
	padding: 2px;
}
.sectionhead {
	font-family: Rye;
	text-align: center;
	font-weight: bold;
	font-size: large;
	display: flex;
	text-transform: capitalize;
}
input[type="text"] {
	background-color: transparent;
	border-left:none;
	border-right:none;
	border-top:none;
	border-bottom: 2px solid rgb(172,146,20);
	font-family: Cookie;
	font-size: large;
}
.deftable select,
label {
	font-family: Italiana;
	text-align: center;
	font-weight: bold;	
}
.dots{
  display:inline-flex;
}
/* Configure the button styling. This example makes it look like a radio. */
button.dot {
  padding: 0;
  border: solid 1px #a8a8a8;
  cursor: pointer;
  width: 7px;
  height: 14px;
  border-radius: 29%;
  display: flex;
  justify-content: center;
  align-items: center;
}

button.dot > span {
  width: 7px;
  height: 14px;
  border-radius: 29%;
  background-color: rgb(150,37,34);
}
.col input[type="number"] {
	width: 1.5em !important;
	background-color: transparent;
	border: 2px solid rgb(172,146,20);
	border-radius: 50%;
}

/* Hide the "checked" section of the radio if the hidden attribute value is greater than the button value */
.none,
input[name="attr_guardwep"][value="0"] + button,
input.dot[value="0"] ~ button.gt-0guard, 
input.dot[value="1"] ~ button.gt-1guard,
input.dot[value="2"] ~ button.gt-2guard,
input.dot[value="0"] ~ button.gt-0 > span.checked, 
input.dot[value="1"] ~ button.gt-1 > span.checked,
input.dot[value="2"] ~ button.gt-2 > span.checked,
input.dot[value="3"] ~ button.gt-3 > span.checked,
input.dot[value="4"] ~ button.gt-4 > span.checked {
  display: none;
}
input.dot[value="0"] ~ input[name="attr_guardwep"][value="0"] ~ .none {
	display: inline;
}

.row,.2colrow,.3colrow,.splitrow {
	display: block;
	clear: both;
}
.col {
	display: inline-block;
	vertical-align: top;
}
.col img {
	max-width: 100%;
}

.twocolrow > .col {	
	width: calc(50% - 20px);
	margin-right: 30px;
}

.threecolrow > .col {
	width: calc(33% - 11px);
	margin-right: 10px;
}
.twocolrow > .dotcol {
	display: inline-block;
	vertical-align: top;	
	width: 45px;
	margin-right: 0px;
}

.threecolrow > .dotcol {
	display: inline-block;
	vertical-align: top;
	width: 45px;
	margin-right: 0px;
}
.col:last-child {
	margin-right: 0px !important;
}
.sheet-row > label, .sheet-row > input {
	display: inline;
	padding-right: 0px;
}

.splitrow > .col:first-child {
	width: calc(33% - 10px);
	margin-right: 10px;
}
.splitrow > .col:last-child {
	width: calc(66%);
}
.headerrow {
	margin-bottom: 3px;
}
.headerrow > .col {
	width: calc(50% - 85px);
}
.headerrow > .col:first-child {
	width: 150px;
}
.headerrow input {
	width: 100%;
	margin-bottom: 5px;
}
.headerrow label {
	margin-bottom: 1px;
}
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}
input[type="number"] {
	-moz-appearance: textfield;
}
.noright {
	margin-right:5px !important;
}
.floatright {
	float: right;
}
.dispositiondots,
.flexcontainer {
	display: flex;
}
.flex {
	flex: 1;
	margin-right: 2px;
}
.logo {
	width: 150px;
	height: 100px;
	border: none;
	padding: none;
	margin: none;
}
.rightspace {
	margin-right: 2px;
}
.headpost {
	display: inline-flex;
	max-width: 72px;
	height: 28px;
    background-image: url("https://raw.githubusercontent.com/EtoileLion/Project-Ansel/master/images/post.png");
	background-position: 0px 7px;
	background-repeat: no-repeat;
	flex: 10;
}
.flexspacer {
	flex: 1;
}
.headpre {
		display: inline-flex;
	max-width: 72px;
	height: 28px;
    background-image: url("https://raw.githubusercontent.com/EtoileLion/Project-Ansel/master/images/pre.png");
	background-position: 0px 7px;
	background-repeat: no-repeat;
	flex: 10;	
}

.tableesque  {
	font-family: Italiana;
	font-size: small;
	font-weight: bold;
	flex: 1;
	text-align: center;
}

.dispositiondots input {
	background: transparent;
	flex: 1;
}
.dispositiondots + input {
	margin-bottom: 10px;
	width: 100%;
}
.dispositiondots .dot,
button.radio {
  padding: 0;
  border: solid 1px #a8a8a8;
  cursor: pointer;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  background-color: rgba(100,50,0,0.3);
}
.dispositiondots .dot > span.checked {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(100,0,0,0.3);
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;  
	color: white;
	font-weight: bold;
}

button.radio > span.checked {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(0,0,100,0.3);
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;  
	color: white;
	font-weight: bold;
}
.guarddot > span.checked {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(0,0,100,0.3) !important;
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;  
	color: white;
	font-weight: bold;	
}

/* Hide the "checked" section of the radio if the attribute value does not match the radio */
input.radio[value="1"] ~ button.radio-1 > span.unchecked,
input.radio[value="2"] ~ button.radio-2 > span.unchecked,
input.radio[value="3"] ~ button.radio-3 > span.unchecked,
input.radio[value="4"] ~ button.radio-4 > span.unchecked,
input.radio[value="5"] ~ button.radio-5 > span.unchecked,
input.radio:not([value="1"]) ~ button.radio-1 > span.checked,
input.radio:not([value="2"]) ~ button.radio-2 > span.checked,
input.radio:not([value="3"]) ~ button.radio-3 > span.checked,
input.radio:not([value="4"]) ~ button.radio-4 > span.checked,
input.radio:not([value="5"]) ~ button.radio-5 > span.checked {
  display: none;
}
.deftable,
.deftable label,
.socialdesc {
   width: 100%;
   text-align: center;
}

.deftable select {
	background-color: transparent;
	width: auto;
	font-size: 1.2em;
}
.weaponselect {
	background-color: transparent;
	width: auto;
	font-family: Cookie;
	font-size: 1.2em;
}
.selwidth {
	width: 82px;
	text-align:center;
}
.condwidth {
	width: 150px;
	text-align: center;
}
.numwidth {
	width: 1.5em;
	text-align:center;
}
.weaponcond {
	width: 150px;
	
}
.weaponname {
	width: 100%;
}
.socialdesc {
	font-family: Italiana;
	font-size: small;
	font-weight: bold;
}
.weaponhead {
	font-family: Italiana;
	font-size: x-small;
	font-weight: bold;
}
.center {
	text-align: center !important;
}
.blackbox {
	width: 3.5em !important;
	border: 2px solid black !important;
	border-radius: 20% !important;
}
.none label {
	text-align: center !important;
	color: rgb(150,37,34);
}
.none{
	width:100%;
	text-align: center;
}
.marginbot {
	margin-bottom: 5px !important;
}
.armor {
	height: 69px;
	width: 51px;
	background-image: url("https://raw.githubusercontent.com/EtoileLion/Project-Ansel/master/images/armor.png");
	line-height: 63px;
	margin: 0px auto;
}
.armor input {
	border: none !important;
	text-align: center;
}
.shield {
	height: 69px;
	width: 51px;
	background-image: url("https://raw.githubusercontent.com/EtoileLion/Project-Ansel/master/images/shield.png");
	margin: 0px auto;
	background-position: 0px 10px;
    background-repeat: no-repeat;	
}
.shield span {
	line-height: 69px;
}
.repcontrol_add,
.repcontrol_edit {
	background-image: none;
	background-color: transparent;
	border: 1px solid rgb(172,146,20);
	border-bottom-color: rgb(122,106,20);
}
.repcontrol_add:hover {
	background-image: none;
	background-color: rgba(0,100,0,0.3);	
}
.repcontrol_edit:hover {
	background-image: none;
	background-color: rgba(100,0,0,0.3);	
}
/* Temporary fix until i can figure out what's making things "broken" */
.repitem.repitembroken {
    border: none !important;
}